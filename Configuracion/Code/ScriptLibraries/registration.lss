'++LotusScript Development Environment:2:5:(Options):0:74
%REM
	Library registration
	Created Jun 24, 2017 by Fernando Rodriguez/SASA
	Description: Comments for Library
%END REM
Option Public
Option Declare


'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub Initialize
Declare Sub AddUserToGroup( ByVal fullname As String, ByVal group As String, nab As NotesDatabase )
Declare Sub AddUserToNab

'++LotusScript Development Environment:2:5:(Declarations):0:2

'++LotusScript Development Environment:2:2:Initialize:1:10
Sub Initialize
	
End Sub



'++LotusScript Development Environment:2:2:AddUserToGroup:1:8
Sub AddUserToGroup( ByVal fullname As String, ByVal group As String, nab As NotesDatabase )
     
     ' Load up our static groups view
     
     Dim groups As NotesView
     
     Set groups = nab.GetView( "Groups" )
     
     Dim groupMainDoc As NotesDocument
     Set groupMainDoc = groups.GetDocumentByKey( group )
     Dim saveGroupMainDoc As Integer
     saveGroupMainDoc = False
     
     If groupMainDoc Is Nothing Then
          Set groupMainDoc = New NotesDocument( nab )
          groupMainDoc.Form = "Group"
          groupMainDoc.ListName = group
          groupMainDoc.Members = group & " 1"
          groupMainDoc.GroupType = "0"
          Call groupMainDoc.ComputeWithForm( False, False )
          saveGroupMainDoc = True
     End If
     
     Dim groupMainMembers As NotesItem
     Set groupMainMembers = groupMainDoc.GetFirstItem( "Members" )
     
     ' Find last subgroup entry in the members list
     
     Dim subGroup As String
     subGroup = ""
     ForAll s In groupMainMembers.Values
          If Left$( s, Len( group ) ) = group Then
               subGroup = s
          End If
     End ForAll
     
     ' Open the subgroup, and keep trying until we find one with room
     
     Dim groupNum As Integer
     groupNum = 0
     
     ' Which subgroup was the last one
     If subGroup <> "" Then
          groupNum = Val( Right( subGroup, Len( subGroup ) - Len( group ) - 1 ) )
     Else
          groupNum = 1
          subGroup = group & " 1"
     End If
     
     Dim groupSubDoc As NotesDocument
     
     Do
          Set groupSubDoc = groups.GetDocumentByKey( subGroup )
          
          If groupSubDoc Is Nothing Then
               ' Create a new subgroup document
               Set groupSubDoc = New NotesDocument( nab )
               groupSubDoc.Form = "Group"
               groupSubDoc.ListName = subGroup
               groupSubDoc.GroupType = "0"
               Call groupSubDoc.ComputeWithForm( False, False )
               
               ' Add it to the main group if needed
               If Not groupMainMembers.Contains( subGroup ) Then
                    Call groupMainMembers.AppendToTextList( subGroup )
                    saveGroupMainDoc = True
               End If
          End If
          
          ' See if the subgroup still has room, if so, we've found our subgroup
          
          Dim groupSubMembers As NotesItem
          Set groupSubMembers = groupSubDoc.GetFirstItem( "Members" )
          
          If groupSubMembers.ValueLength < 10000 Then
               Exit Do
          End If
          
          ' If no room, try the next one
          
          groupNum = groupNum + 1
          subGroup = group & " " & groupNum
     Loop
     
     ' Finally: add the user to the subgroup
     Call groupSubMembers.AppendToTextList( fullname )
     Call groupSubDoc.Save( False, True )
     
     If saveGroupMainDoc Then
          Call groupMainDoc.Save( False, True )
     End If
     
End Sub

'++LotusScript Development Environment:2:2:AddUserToNab:5:8
%REM
	Sub AddUserToNab
	Description: Comments for Sub
%END REM
Sub AddUserToNab
	Dim dbPeople As NotesDatabase
	Dim docPerson As NotesDocument
	Dim doc As NotesDocument
	
	Set docPerson = New NotesDocument( dbPeople )
	docPerson.Form = "Person"
	docPerson.Type = "Person"
	docPerson.LastName = doc.LastName(0)
	docPerson.FirstName = doc.FirstName(0)
	docPerson.FullName = doc.UserName(0)
	docPerson.PhoneNumber = doc.PhoneNumber(0)
	docPerson.MailAddress = doc.EMail(0)
	docPerson.HTTPPassword = doc.NewPassword(0)
	Call docPerson.ComputeWithForm( False, False )
	Call docPerson.Save( False, True )
End Sub